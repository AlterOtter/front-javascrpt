<?xml version="1.0" encoding="UTF-8"?>
<beans 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns="http://www.springframework.org/schema/beans"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- <aop:aspectj-autoproxy />-->
	<!-- Message Converter, Handler Mapping, Validator 생성 및 설정 -->
 	<mvc:annotation-driven>
 		<mvc:message-converters>
	  <!-- html(text) message converter -->
 			 <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	 			 <property name="supportedMediaTypes">
	 			 	<list>
	 			 		<value>text/html;charset=UTF-8</value>
	 			 	</list>
	 			 </property>
 			  </bean>
    <!-- XML messgage converter -->   
 			  <!-- 
 			  	1. Marchaling
 			 		: 데이터 (object)를 xml로 만드는 것
 			  	2. Unmarchaling
 			 		: xml 데이터를 데이터 형태(Object)로 만드는것
 			 	3. java 지원
 			 		1)OXM ( Object Xml Mapping)
 			 			- XML 데이터와 객체를 매핑
 			 			- MarshalingHttpMessageConverter
 			 		2)JAXV 
 			 			- OXM를 쉽게 도와주는 TOOL
 			 			- 마샬링/언마샬링을 Annotation 기반으로 한다.
 			 			- JAXBAnnotation(@XMLElementRoot)를 사용해서 직관적으로 매핑한다
 			 			- jaxb2rootElementHttpConverter
 			   -->
 			  <!-- JSON message converter -->
 			  <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/xml; charset=UTF-8</value>
					</list>
				</property>
			</bean>
 			  
 			 <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	 			 <property name="supportedMediaTypes">
	 			 	<list>
	 			 		<value>application/json; charset=UTF-8</value>
	 			 	</list>
	 			 </property>
 			 </bean>
 			  
 			  
 		</mvc:message-converters>
 	</mvc:annotation-driven>
	
   <context:annotation-config />	
  
   	
   	<!-- 서블릿 컨테이너(tomcat)의 DefaultServlet의 위임(delegate) Handler -->
   <mvc:default-servlet-handler/>
    
   <!--ViewResolver  -->
   <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
   		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
   		<property name="prefix" value="/WEB-INF/views/"></property>
   		<property name="suffix" value=".jsp"></property>
   </bean>
   

   
	
	<!-- mvc url-resource mapping -->
	<mvc:resources mapping="/images/**" location="file:/upload-images/" />
   
   
   <context:component-scan base-package="com.poscoict.controller" />
   
</beans>
